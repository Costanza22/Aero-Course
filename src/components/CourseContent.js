import React, { useState, useEffect } from 'react';
import './CourseContent.css';

const PROGRESS_KEY = 'aerocourse_progress';

const CourseContent = ({ onSelectModule }) => {
  const [selectedModule, setSelectedModule] = useState(null);
  const [completed, setCompleted] = useState(() => {
    const saved = localStorage.getItem(PROGRESS_KEY);
    return saved ? JSON.parse(saved) : [];
  });

  useEffect(() => {
    localStorage.setItem(PROGRESS_KEY, JSON.stringify(completed));
  }, [completed]);

  const modules = [
    {
      id: 1,
      title: "Fundamentos da Aeron√°utica",
      icon: "üõ©Ô∏è",
      description: "Princ√≠pios b√°sicos de voo e aerodin√¢mica",
      lessons: [
        "Hist√≥ria da Avia√ß√£o",
        "Princ√≠pios de Voo",
        "Aerodin√¢mica B√°sica",
        "Controles de Voo"
      ],
      duration: "4 horas",
      level: "Iniciante"
    },
    {
      id: 2,
      title: "Sistemas de Aeronaves",
      icon: "‚öôÔ∏è",
      description: "Componentes e sistemas essenciais das aeronaves",
      lessons: [
        "Sistema de Propuls√£o",
        "Sistema El√©trico",
        "Sistema Hidr√°ulico",
        "Sistema de Combust√≠vel"
      ],
      duration: "6 horas",
      level: "Intermedi√°rio"
    },
    {
      id: 3,
      title: "Navega√ß√£o A√©rea",
      icon: "üß≠",
      description: "T√©cnicas de navega√ß√£o e instrumentos de voo",
      lessons: [
        "Navega√ß√£o Visual",
        "Navega√ß√£o por Instrumentos",
        "Sistemas GPS",
        "Cartas Aeron√°uticas"
      ],
      duration: "5 horas",
      level: "Intermedi√°rio"
    },
    {
      id: 4,
      title: "Meteorologia Aeron√°utica",
      icon: "üå§Ô∏è",
      description: "Condi√ß√µes meteorol√≥gicas e sua influ√™ncia no voo",
      lessons: [
        "Atmosfera Terrestre",
        "Massas de Ar",
        "Frentes Meteorol√≥gicas",
        "Turbul√™ncia"
      ],
      duration: "4 horas",
      level: "Intermedi√°rio"
    },
    {
      id: 5,
      title: "Regulamenta√ß√£o Aeron√°utica",
      icon: "üìã",
      description: "Normas e regulamentos da avia√ß√£o civil",
      lessons: [
        "√ìrg√£os Reguladores",
        "Licen√ßas e Certifica√ß√µes",
        "Regras de Voo",
        "Seguran√ßa Operacional"
      ],
      duration: "3 horas",
      level: "Avan√ßado"
    },
    {
      id: 6,
      title: "Manuten√ß√£o de Aeronaves",
      icon: "üîß",
      description: "Procedimentos de manuten√ß√£o e inspe√ß√£o",
      lessons: [
        "Tipos de Manuten√ß√£o",
        "Inspe√ß√µes Peri√≥dicas",
        "Documenta√ß√£o T√©cnica",
        "Controle de Qualidade"
      ],
      duration: "5 horas",
      level: "Avan√ßado"
    }
  ];

  const total = modules.length;
  const done = completed.length;
  const percent = Math.round((done / total) * 100);

  const toggleComplete = (id) => {
    setCompleted((prev) =>
      prev.includes(id) ? prev.filter((m) => m !== id) : [...prev, id]
    );
  };

  return (
    <section className="course-content">
      <div className="progress-bar-container">
        <div className="progress-bar-bg">
          <div className="progress-bar-fill" style={{ width: percent + '%' }} />
        </div>
        <span className="progress-bar-label">Progresso: {done} de {total} m√≥dulos ({percent}%)</span>
      </div>
      <div className="content-container">
        <div className="content-header">
          <h2>M√≥dulos do Curso</h2>
          <p>Explore os t√≥picos fundamentais da aeron√°utica</p>
        </div>
        <div className="modules-grid">
          {modules.map((module) => (
            <div 
              key={module.id}
              className={`module-card ${selectedModule === module.id ? 'expanded' : ''}`}
              onClick={() => setSelectedModule(selectedModule === module.id ? null : module.id)}
            >
              <div className="module-header">
                <div className="module-icon">{module.icon}</div>
                <div className="module-info">
                  <h3>{module.title}</h3>
                  <p>{module.description}</p>
                </div>
                <div className="module-meta">
                  <span className="duration">{module.duration}</span>
                  <span className="level">{module.level}</span>
                </div>
              </div>
              {selectedModule === module.id && (
                <div className="module-details">
                  <h4>Li√ß√µes Inclu√≠das:</h4>
                  <ul className="lessons-list">
                    {module.lessons.map((lesson, index) => (
                      <li key={index}>
                        <span className="lesson-number">{index + 1}</span>
                        {lesson}
                      </li>
                    ))}
                  </ul>
                  <div className="module-actions">
                    <button className="start-module-btn" onClick={e => { e.stopPropagation(); onSelectModule && onSelectModule(module.id); }}>
                      Iniciar M√≥dulo
                    </button>
                    <button className={`complete-module-btn${completed.includes(module.id) ? ' completed' : ''}`} onClick={e => { e.stopPropagation(); toggleComplete(module.id); }}>
                      {completed.includes(module.id) ? 'Conclu√≠do ‚úîÔ∏è' : 'Marcar como conclu√≠do'}
                    </button>
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default CourseContent; 